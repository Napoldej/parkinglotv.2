generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}


enum VehicleSize {
  Motorcycle
  Compact
  Large
}

model Vehicle {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  licensePlate   String        @unique
  size           VehicleSize
  spotsNeeded    Int
  parkedSpots    ParkingSpot[] // A Vehicle can have many ParkingSpots
}

model ParkingSpot {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  spotNumber     Int
  row            Int
  size           VehicleSize
  levelId        String
  level          Level         @relation(fields: [levelId], references: [id])
  vehicleId      String?
  vehicle        Vehicle?      @relation(fields: [vehicleId], references: [id])
  isOccupied     Boolean       @default(false)  // New field to track if the spot is occupied
}

model Level {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  floor          Int
  parkingLotId   String
  parkingLot     ParkingLot   @relation(fields: [parkingLotId], references: [id])
  parkingSpots   ParkingSpot[]
}

model ParkingLot {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  levels         Level[]   // A one-to-many relationship with Level
  totalSpots     Int
  availableSpots Int
}
